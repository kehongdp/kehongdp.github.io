html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center, hr,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

html,
body {
  font-family: "-apple-system,BlinkMacSystemFont," Helvetica Neue ",Arial," PingFang SC "," Hiragino Sans GB ",STHeiti," Microsoft YaHei "," Microsoft JhengHei "," Source Han Sans SC "," Noto Sans CJK SC "," Source Han Sans CN "," Noto Sans SC "," Source Han Sans TC "," Noto Sans CJK TC "," WenQuanYi Micro Hei ",SimSun,sans-serif";
  font-size: 14px;
  line-height: 1.428;
  background-color: #fff;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  color: #222;
  -webkit-overflow-scrolling: touch;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: white;
  -webkit-backface-visibility: hidden;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

template {
  display: none; }

/* block */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, main {
  display: block; }

summary {
  display: list-item; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

ol, ul, dd {
  margin-left: 0;
  padding-left: 0;
  list-style: none;
  list-style-type: none; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before, q:after {
  content: "";
  content: none; }

/* table */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* Forms */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  line-height: 1.15;
  vertical-align: baseline;
  *vertical-align: middle; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

fieldset {
  padding: 0.35em 0.75em 0.625em; }

legend {
  display: table;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  max-width: 100%;
  white-space: normal;
  color: inherit; }

progress {
  display: inline-block;
  vertical-align: baseline; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer;
  *overflow: visible;
  -webkit-appearance: button; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border: 0;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
  *height: 13px;
  *width: 13px; }

input:focus {
  outline: 0; }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-appearance: textfield;
  outline-offset: -2px; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

/* inline */
select,
input,
img,
select {
  vertical-align: middle; }

a {
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects; }

a:active,
a:hover {
  outline: 0; }

i {
  font-style: normal; }

img {
  display: inline-block;
  border: none;
  vertical-align: middle;
  -ms-interpolation-mode: bicubic; }

svg:not(:root) {
  overflow: hidden; }

b, strong {
  font-weight: inherit; }

b, strong {
  font-weight: bolder; }

hr {
  height: 0;
  overflow: visible; }

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; }

code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 1em; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

summary {
  display: list-item; }

dfn {
  font-style: italic; }

mark {
  background-color: #ff0;
  color: #000; }

/* multimedia */
canvas,
audio,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

audio:not([controls]) {
  display: none;
  height: 0; }

/* selector */
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

/* placeholder */
::-webkit-input-placeholder {
  color: #cecece;
  font-size: 14px; }
::-moz-placeholder {
  color: #cecece;
  font-size: 14px; }
:-ms-input-placeholder {
  color: #cecece;
  font-size: 14px; }
::-ms-input-placeholder {
  color: #cecece;
  font-size: 14px; }
::placeholder {
  color: #cecece;
  font-size: 14px; }

::-webkit-input-placeholder {
  color: #cecece;
  font-size: 14px; }

::-moz-placeholder {
  color: #cecece;
  font-size: 14px; }

:-ms-input-placeholder {
  color: #cecece;
  font-size: 14px; }

/* scrollbar */
::-webkit-scrollbar {
  width: 6px;
  height: 6px; }

::-webkit-scrollbar-track-piece {
  background: #eee; }

::-webkit-scrollbar-thumb:vertical {
  background: #666; }

/* compatibility */
[hidden] {
  display: none; }

html, body {
  min-width: 320px; }

/********* color *****************/
.theme-color {
  color: #9489ff; }

.white-color {
  color: #fff; }

.black-color {
  color: #000; }

.theme-bg-color {
  background-color: #fff; }

.white-bg-color {
  background-color: #fff; }

.black-bg-color {
  background-color: #000; }

.box-sizing {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.hoverhands {
  cursor: pointer; }

.one-line {
  display: -webkit-box !important;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1; }

.lkh-clear:after {
  content: '';
  clear: both;
  display: block;
  width: 0;
  height: 0;
  visibility: hidden; }

.g-pos-r {
  position: relative;
  z-index: 9; }

.g-pos-a {
  position: absolute;
  z-index: 9; }

.g-pos-f {
  position: fixed;
  z-index: 9; }

.g-pos-s {
  position: static;
  z-index: 9; }

.g-fl-l {
  float: left; }

.g-fl-r {
  float: right; }

.g-d-i {
  display: inline; }

.g-d-ib {
  display: inline-block; }

.g-d-b {
  display: block; }

.g-d-n {
  display: none; }

.g-box-b {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.g-box-c {
  -webkit-box-sizing: content-box;
          box-sizing: content-box; }

.g-mg-auto {
  margin-left: auto;
  margin-right: auto; }

.g-w-per {
  width: 100%; }

.g-h-per {
  height: 100%; }

.g-col-2 {
  width: 50%; }

.g-col-3 {
  width: 33.33333%; }

.g-col-4 {
  width: 25%; }

.g-col-5 {
  width: 20%; }

.g-col-6 {
  width: 16.66667%; }

.g-col-8 {
  width: 12.5%; }

.g-col-10 {
  width: 10%; }

.g-col-2 {
  height: 50%; }

.g-row-3 {
  height: 33.33333%; }

.g-row-4 {
  height: 25%; }

.g-row-5 {
  height: 20%; }

.g-row-6 {
  height: 16.66667%; }

.g-row-8 {
  height: 12.5%; }

.g-row-10 {
  width: 10%; }

.g-fs-12 {
  font-size: 12px; }

.g-fs-14 {
  font-size: 14px; }

.g-fs-16 {
  font-size: 16px; }

.g-fs-18 {
  font-size: 18px; }

.g-fs-20 {
  font-size: 20px; }

.g-fs-22 {
  font-size: 22px; }

.g-fs-24 {
  font-size: 24px; }

.g-fs-26 {
  font-size: 26px; }

.g-fs-28 {
  font-size: 28px; }

.g-fs-30 {
  font-size: 30px; }

.g-fs-36 {
  font-size: 36px; }

.g-fw-n {
  font-weight: normal; }

.g-fw-1 {
  font-weight: 100; }

.g-fw-2 {
  font-weight: 200; }

.g-fw-3 {
  font-weight: 300; }

.g-fw-4 {
  font-weight: 400; }

.g-fw-5 {
  font-weight: 500; }

.g-fw-6 {
  font-weight: 600; }

.g-fw-7 {
  font-weight: 700; }

.g-fw-8 {
  font-weight: 800; }

.g-fw-9 {
  font-weight: 900; }

.g-fw-b {
  font-weight: bold; }

.g-txt-al {
  text-align: left; }

.g-txt-ac {
  text-align: center; }

.g-txt-ar {
  text-align: right; }

.g-txt-i {
  text-indent: 2em; }

.header {
  position: relative;
  width: 100%;
  height: 540px;
  background-position-x: center;
  background-position-y: center;
  background-repeat: no-repeat;
  background-image: url(/assets/images/header-bg.jpg);
  background-size: cover;
  color: #fff; }
  .header-logo {
    position: absolute;
    top: 0;
    left: 20px;
    display: inline-block;
    padding-top: 12px;
    padding-bottom: 12px;
    height: 60px;
    font-weight: 800;
    line-height: 36px;
    color: #fff; }
    .header-logo:link, .header-logo:visited .header-logo:active {
      opacity: 1; }
    .header-logo:hover {
      color: #9489ff; }
  .header-navbars-icon {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 99;
    display: none;
    width: 20px;
    height: 20px;
    font-size: 20px;
    color: #fff; }
    .header-navbars-icon:hover {
      color: #9489ff; }
  .header-navbar {
    position: absolute;
    top: 0;
    right: 20px;
    width: 400px;
    height: 60px; }
    .header-navbar-item {
      float: left;
      display: inline-block;
      padding: 12px 15px;
      width: 100%;
      max-width: 130px;
      height: 60px;
      font-weight: 600;
      line-height: 36px;
      text-align: center;
      color: #fff; }
      .header-navbar-item:hover {
        color: #9489ff; }

.footer {
  width: 100%;
  height: 80px;
  line-height: 80px;
  font-size: 16px;
  text-align: center;
  background-color: #000;
  color: #fff; }

.lkh-pages {
  position: relative;
  height: 30px; }
  .lkh-pages-item {
    display: inline-block;
    border-radius: 3px;
    width: 95px;
    height: 30px;
    font-size: 14px;
    line-height: 30px;
    text-align: center;
    background-color: #9489ff;
    color: #fff; }
  .lkh-pages-perv {
    position: absolute;
    top: 0;
    left: 10px; }
  .lkh-pages-next {
    position: absolute;
    top: 0;
    right: 10px; }
  .lkh-pages-number {
    position: absolute;
    top: 0;
    left: 50%;
    display: inline-block;
    margin-left: -50px;
    width: 100px;
    height: 30px;
    font-size: 14px;
    line-height: 30px;
    text-align: center;
    color: #ccc; }
  .lkh-pages-current {
    color: #9489ff; }

@media screen and (max-width: 768px) {
  .header {
    height: 200px; }
    .header-navbars-icon {
      display: inline-block; }
    .header-navbar {
      top: 15px;
      right: 50px;
      display: none;
      width: 100px;
      height: 90px; }
      .header-navbar-item {
        float: none;
        padding: 0;
        height: 30px;
        line-height: 30px; } }

.highlight pre {
  border-radius: 3px;
  padding: 12px;
  background-color: #333; }

.highlight .hll {
  background-color: #333333; }

.highlight .c {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment */
.highlight .err {
  color: #ffffff; }

/* Error */
.highlight .g {
  color: #ffffff; }

/* Generic */
.highlight .k {
  color: #fb660a;
  font-weight: bold; }

/* Keyword */
.highlight .l {
  color: #ffffff; }

/* Literal */
.highlight .n {
  color: #ffffff; }

/* Name */
.highlight .o {
  color: #ffffff; }

/* Operator */
.highlight .x {
  color: #ffffff; }

/* Other */
.highlight .p {
  color: #ffffff; }

/* Punctuation */
.highlight .cm {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Multiline */
.highlight .cp {
  color: #ff0007;
  font-weight: bold;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Preproc */
.highlight .c1 {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Single */
.highlight .cs {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Special */
.highlight .gd {
  color: #ffffff; }

/* Generic.Deleted */
.highlight .ge {
  color: #ffffff; }

/* Generic.Emph */
.highlight .gr {
  color: #ffffff; }

/* Generic.Error */
.highlight .gh {
  color: #ffffff;
  font-weight: bold; }

/* Generic.Heading */
.highlight .gi {
  color: #ffffff; }

/* Generic.Inserted */
.highlight .go {
  color: #444444;
  background-color: #222222; }

/* Generic.Output */
.highlight .gp {
  color: #ffffff; }

/* Generic.Prompt */
.highlight .gs {
  color: #ffffff; }

/* Generic.Strong */
.highlight .gu {
  color: #ffffff;
  font-weight: bold; }

/* Generic.Subheading */
.highlight .gt {
  color: #ffffff; }

/* Generic.Traceback */
.highlight .kc {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Constant */
.highlight .kd {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Declaration */
.highlight .kn {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Namespace */
.highlight .kp {
  color: #fb660a; }

/* Keyword.Pseudo */
.highlight .kr {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Reserved */
.highlight .kt {
  color: #cdcaa9;
  font-weight: bold; }

/* Keyword.Type */
.highlight .ld {
  color: #ffffff; }

/* Literal.Date */
.highlight .m {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number */
.highlight .s {
  color: #0086d2; }

/* Literal.String */
.highlight .na {
  color: #ff0086;
  font-weight: bold; }

/* Name.Attribute */
.highlight .nb {
  color: #ffffff; }

/* Name.Builtin */
.highlight .nc {
  color: #ffffff; }

/* Name.Class */
.highlight .no {
  color: #0086d2; }

/* Name.Constant */
.highlight .nd {
  color: #ffffff; }

/* Name.Decorator */
.highlight .ni {
  color: #ffffff; }

/* Name.Entity */
.highlight .ne {
  color: #ffffff; }

/* Name.Exception */
.highlight .nf {
  color: #ff0086;
  font-weight: bold; }

/* Name.Function */
.highlight .nl {
  color: #ffffff; }

/* Name.Label */
.highlight .nn {
  color: #ffffff; }

/* Name.Namespace */
.highlight .nx {
  color: #ffffff; }

/* Name.Other */
.highlight .py {
  color: #ffffff; }

/* Name.Property */
.highlight .nt {
  color: #fb660a;
  font-weight: bold; }

/* Name.Tag */
.highlight .nv {
  color: #fb660a; }

/* Name.Variable */
.highlight .ow {
  color: #ffffff; }

/* Operator.Word */
.highlight .w {
  color: #888888; }

/* Text.Whitespace */
.highlight .mf {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Float */
.highlight .mh {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Hex */
.highlight .mi {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Integer */
.highlight .mo {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Oct */
.highlight .sb {
  color: #0086d2; }

/* Literal.String.Backtick */
.highlight .sc {
  color: #0086d2; }

/* Literal.String.Char */
.highlight .sd {
  color: #0086d2; }

/* Literal.String.Doc */
.highlight .s2 {
  color: #0086d2; }

/* Literal.String.Double */
.highlight .se {
  color: #0086d2; }

/* Literal.String.Escape */
.highlight .sh {
  color: #0086d2; }

/* Literal.String.Heredoc */
.highlight .si {
  color: #0086d2; }

/* Literal.String.Interpol */
.highlight .sx {
  color: #0086d2; }

/* Literal.String.Other */
.highlight .sr {
  color: #0086d2; }

/* Literal.String.Regex */
.highlight .s1 {
  color: #0086d2; }

/* Literal.String.Single */
.highlight .ss {
  color: #0086d2; }

/* Literal.String.Symbol */
.highlight .bp {
  color: #ffffff; }

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #fb660a; }

/* Name.Variable.Class */
.highlight .vg {
  color: #fb660a; }

/* Name.Variable.Global */
.highlight .vi {
  color: #fb660a; }

/* Name.Variable.Instance */
.highlight .il {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Integer.Long */
.g-form-control {
  display: inline-block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 3px;
  border: 1px solid #e7e7e7;
  margin: 20px;
  padding: 6px 8px;
  height: 36px;
  line-height: 24px; }
  .g-form-control:focus {
    -webkit-box-shadow: 0 -2px 5px -2px #8395f5, 0 2px 5px -2px #8395f5, 1px 0 5px -2px #8395f5, -1px 0 5px -2px #8395f5;
            box-shadow: 0 -2px 5px -2px #8395f5, 0 2px 5px -2px #8395f5, 1px 0 5px -2px #8395f5, -1px 0 5px -2px #8395f5;
    border-color: #677fff; }

/*//
// Forms
// --------------------------------------------------


// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: @line-height-computed;
  font-size: (@font-size-base * 1.5);
  line-height: inherit;
  color: @legend-color;
  border: 0;
  border-bottom: 1px solid @legend-border-color;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: bold;
}


// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  .box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Adjust output element
output {
  display: block;
  padding-top: (@padding-base-vertical + 1);
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
}
*/
/*// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
}


// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
  -webkit-appearance: none;
}


// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 9.3, iOS doesn't support `week`.

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.form-control {
      line-height: @input-height-base;
    }

    &.input-sm,
    .input-group-sm & {
      line-height: @input-height-small;
    }

    &.input-lg,
    .input-group-lg & {
      line-height: @input-height-large;
    }
  }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: @form-group-margin-bottom;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    min-height: @line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
  margin-top: 4px \9;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: @cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: @cursor-disabled;
    }
  }
}


// Static form control text
//
// Apply class to a `p` element to make any string of text align with labels in
// a horizontal form layout.

.form-control-static {
  // Size it appropriately next to real form controls
  padding-top: (@padding-base-vertical + 1);
  padding-bottom: (@padding-base-vertical + 1);
  // Remove default margin from `p`
  margin-bottom: 0;
  min-height: (@line-height-computed + @font-size-base);

  &.input-lg,
  &.input-sm {
    padding-left: 0;
    padding-right: 0;
  }
}


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

.input-sm {
  .input-size(@input-height-small; @padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @input-border-radius-small);
}
.form-group-sm {
  .form-control {
    height: @input-height-small;
    padding: @padding-small-vertical @padding-small-horizontal;
    font-size: @font-size-small;
    line-height: @line-height-small;
    border-radius: @input-border-radius-small;
  }
  select.form-control {
    height: @input-height-small;
    line-height: @input-height-small;
  }
  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }
  .form-control-static {
    height: @input-height-small;
    min-height: (@line-height-computed + @font-size-small);
    padding: (@padding-small-vertical + 1) @padding-small-horizontal;
    font-size: @font-size-small;
    line-height: @line-height-small;
  }
}

.input-lg {
  .input-size(@input-height-large; @padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @input-border-radius-large);
}
.form-group-lg {
  .form-control {
    height: @input-height-large;
    padding: @padding-large-vertical @padding-large-horizontal;
    font-size: @font-size-large;
    line-height: @line-height-large;
    border-radius: @input-border-radius-large;
  }
  select.form-control {
    height: @input-height-large;
    line-height: @input-height-large;
  }
  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }
  .form-control-static {
    height: @input-height-large;
    min-height: (@line-height-computed + @font-size-large);
    padding: (@padding-large-vertical + 1) @padding-large-horizontal;
    font-size: @font-size-large;
    line-height: @line-height-large;
  }
}


// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

.has-feedback {
  // Enable absolute positioning
  position: relative;

  // Ensure icons don't overlap text
  .form-control {
    padding-right: (@input-height-base * 1.25);
  }
}
// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2; // Ensure icon is above input groups
  display: block;
  width: @input-height-base;
  height: @input-height-base;
  line-height: @input-height-base;
  text-align: center;
  pointer-events: none;
}
.input-lg + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  width: @input-height-large;
  height: @input-height-large;
  line-height: @input-height-large;
}
.input-sm + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  width: @input-height-small;
  height: @input-height-small;
  line-height: @input-height-small;
}

// Feedback states
.has-success {
  .form-control-validation(@state-success-text; @state-success-text; @state-success-bg);
}
.has-warning {
  .form-control-validation(@state-warning-text; @state-warning-text; @state-warning-bg);
}
.has-error {
  .form-control-validation(@state-danger-text; @state-danger-text; @state-danger-bg);
}

// Reposition feedback icon if input has visible label above
.has-feedback label {

  & ~ .form-control-feedback {
    top: (@line-height-computed + 5); // Height of the `label` and its margin
  }
  &.sr-only ~ .form-control-feedback {
    top: 0;
  }
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  margin-top: 5px;
  margin-bottom: 10px;
  color: lighten(@text-color, 25%); // lighten the text some for contrast
}


// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).
//
// Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

.form-inline {

  // Kick in the inline
  @media (min-width: @screen-sm-min) {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-static {
      display: inline-block;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }

    // Re-override the feedback icon.
    .has-feedback .form-control-feedback {
      top: 0;
    }
  }
}


// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {

  // Consistent vertical alignment of radios and checkboxes
  //
  // Labels also get some reset styles, but that is scoped to a media query below.
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: (@padding-base-vertical + 1); // Default padding plus a border
  }
  // Account for padding we're adding to ensure the alignment and of help text
  // and other content below items
  .radio,
  .checkbox {
    min-height: (@line-height-computed + (@padding-base-vertical + 1));
  }

  // Make form groups behave like rows
  .form-group {
    .make-row();
  }

  // Reset spacing and right align labels, but scope to media queries so that
  // labels on narrow viewports stack the same as a default form example.
  @media (min-width: @screen-sm-min) {
    .control-label {
      text-align: right;
      margin-bottom: 0;
      padding-top: (@padding-base-vertical + 1); // Default padding plus a border
    }
  }

  // Validation states
  //
  // Reposition the icon because it's now within a grid column and columns have
  // `position: relative;` on them. Also accounts for the grid gutter padding.
  .has-feedback .form-control-feedback {
    right: floor((@grid-gutter-width / 2));
  }

  // Form group sizes
  //
  // Quick utility class for applying `.input-lg` and `.input-sm` styles to the
  // inputs and labels within a `.form-group`.
  .form-group-lg {
    @media (min-width: @screen-sm-min) {
      .control-label {
        padding-top: (@padding-large-vertical + 1);
        font-size: @font-size-large;
      }
    }
  }
  .form-group-sm {
    @media (min-width: @screen-sm-min) {
      .control-label {
        padding-top: (@padding-small-vertical + 1);
        font-size: @font-size-small;
      }
    }
  }
}*/
.u-btn {
  display: inline-block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 3px;
  border: 1px solid #dcdee2;
  padding-left: 12px;
  padding-right: 12px;
  min-width: 120px;
  height: 32px;
  line-height: 30px;
  font-size: 14px;
  font-weight: 400;
  text-align: center;
  vertical-align: middle;
  background-color: #fff;
  color: #4a4a4a;
  cursor: pointer; }
  .u-btn-primary {
    border-color: #2d8cf0;
    background-color: #2d8cf0;
    color: #fff; }
  .u-btn-success {
    border-color: #19be6b;
    background-color: #19be6b;
    color: #fff; }
  .u-btn-warning {
    border-color: #f90;
    background-color: #f90;
    color: #fff; }
  .u-btn-error {
    border-color: #f00;
    background-color: #f00;
    color: #fff; }
  .u-btn:hover {
    opacity: .8; }

@media screen and (max-width: 767px) {
  .g-header-navbars {
    display: none;
    padding-right: 72px; }
    .g-header-navbars .g-navbar-item {
      display: block;
      text-align: right; }
  .g-header .fa-bars {
    display: inline-block; } }

@media screen and (min-width: 768px) {
  .g-header .fa-bars {
    display: none; } }

.container {
  margin-left: auto;
  margin-right: auto;
  width: 960px; }

.home-container {
  min-height: 850px; }

.home-content {
  float: left;
  padding: 30px 10px;
  width: 75%;
  min-height: 850px; }

.home-articles {
  min-height: 780px; }
  .home-articles-item {
    margin-bottom: 15px;
    padding-bottom: 20px;
    border-bottom: 1px solid #eaeaea; }
    .home-articles-item:last-of-type {
      border-bottom: none; }
  .home-articles-title {
    display: block;
    margin-bottom: 10px;
    font-size: 22px;
    line-height: 30px;
    color: #000;
    min-height: 40px;
    max-height: 80px;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical; }
    .home-articles-title:hover {
      color: #9489ff; }
  .home-articles-introduction {
    display: -webkit-box;
    overflow: hidden;
    margin-bottom: 8px;
    max-height: 44px;
    font-size: 14px;
    line-height: 22px;
    text-overflow: ellipsis;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    color: #ccc; }
  .home-articles-info {
    font-size: 14px;
    line-height: 22px;
    color: #ccc; }
    .home-articles-info-time {
      display: inline-block;
      margin-right: 10px; }
    .home-articles-info-tags {
      display: inline-block;
      margin-left: 10px; }
  .home-articles-if {
    display: block; }
  .home-articles-else {
    display: none; }

.home-sidebar {
  float: right;
  padding: 0 15px 20px;
  width: 25%; }
  .home-sidebar-item {
    padding-top: 20px;
    padding-bottom: 30px;
    border-bottom: 1px solid #efefef; }
    .home-sidebar-item:last-of-type {
      border-bottom: none; }
  .home-sidebar-title {
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;
    font-weight: 700;
    color: #a7a7a7; }
    .home-sidebar-title:hover {
      color: #9489ff; }
  .home-sidebar-btn {
    float: left;
    display: inline-block;
    margin-right: 10px;
    margin-bottom: 8px;
    padding-left: 12px;
    padding-right: 12px;
    border-radius: 3px;
    border: 1px solid #bfbfbf;
    height: 30px;
    line-height: 30px;
    color: #a9a4a4; }
    .home-sidebar-btn:hover {
      color: #9489ff;
      border-color: #9489ff; }
  .home-sidebar-img {
    display: block;
    border-radius: 5px;
    width: 80%; }
  .home-sidebar-des {
    padding-top: 7px;
    padding-bottom: 7px;
    font-size: 12px;
    color: #a9a4a4; }
  .home-sidebar-friends-link {
    padding: 3px 6px;
    color: #a9a4a4; }
    .home-sidebar-friends-link:hover {
      text-decoration: underline;
      color: #9489ff; }

@media screen and (max-width: 768px) {
  .container {
    width: 100%; }
  .home-container {
    min-height: 530px; }
  .home-content {
    float: none;
    width: 100%;
    min-height: 530px; }
  .home-sidebar {
    display: none; }
  .home-article-if {
    display: none; }
  .home-article-else {
    display: block; } }

.container {
  margin-left: auto;
  margin-right: auto;
  width: 960px; }

.header-articles {
  background-image: url(/assets/images/header-articles.jpg); }

.tags-container,
.articles-container {
  min-height: 350px; }

.articles-content {
  float: left;
  padding: 25px 10px;
  width: 75%; }
  .articles-content-tag {
    margin-right: 5px;
    padding: 5px 15px;
    border: 1px solid #404040;
    border-radius: 15px;
    height: 25px;
    font-size: 13px;
    line-height: 25px;
    color: #404040; }
    .articles-content-tag:last-of-type {
      margin-right: 0; }
    .articles-content-tag:hover {
      border-color: #9489ff;
      color: #9489ff; }
  .articles-content-title {
    margin-top: 20px;
    margin-bottom: 10px;
    font-size: 30px;
    line-height: 36px;
    color: #404040; }
  .articles-content-info {
    font-size: 16px;
    line-height: 22px;
    color: #ccc; }
  .articles-content p {
    margin-top: 12px;
    margin-bottom: 12px;
    font-size: 14px;
    line-height: 20px; }
  .articles-content figure {
    margin-top: 20px;
    margin-bottom: 20px; }

.header-articles {
  background-image: url(/assets/images/header-articles.jpg); }

.tags-content {
  padding: 25px 10px; }

.tags-list-button {
  position: relative;
  float: left;
  display: inline-block;
  margin-right: 5px;
  margin-bottom: 7px;
  padding-left: 15px;
  padding-right: 15px;
  border: 1px solid #9489ff;
  border-radius: 3px;
  height: 30px;
  font-size: 15px;
  line-height: 30px;
  background-color: #9489ff;
  color: #000;
  opacity: .75; }

.tags-list-active {
  background-color: #29716e;
  color: #fff; }

.tags-list sup {
  position: absolute;
  top: 1px;
  right: 1px;
  z-index: 9;
  display: inline-block;
  min-width: 15px;
  height: 15px;
  font-size: 12px;
  line-height: 15px;
  text-align: center;
  color: #fff; }

.result-archives {
  margin-top: 20px; }
  .result-archives-item {
    margin-bottom: 15px; }
    .result-archives-item-year {
      margin-bottom: 10px;
      font-size: 26px;
      color: #29716e; }
    .result-archives-item-link {
      display: block;
      margin-left: 10px;
      padding-top: 10px;
      padding-bottom: 10px;
      border-bottom: 1px solid #ccc;
      min-height: 45px;
      font-size: 16px;
      line-height: 25px;
      color: #404040; }
      .result-archives-item-link:last-child {
        margin-bottom: 0; }
      .result-archives-item-link:hover {
        color: #9489ff; }
      .result-archives-item-link-active {
        display: none; }
    .result-archives-item-active {
      display: none; }

@media screen and (max-width: 768px) {
  .container {
    width: 100%; }
  .articles-container,
  .tasg-container {
    min-height: 530px; }
  .articles-content {
    float: none;
    width: 100%; } }
